{
    "class": "go.GraphLinksModel",
    "dataFormat": "flow-1",
    "nodeKeyProperty": "id",
    "nodeCategoryProperty": "class",
    "linkFromPortIdProperty": "fromPort",
    "linkToPortIdProperty": "toPort",
    "nodeDataArray": [
        {
            "class": "Flow.Begin",
            "name": "Begin",
            "loc": "-308.171875 -500.5",
            "id": "943fb90c-8699-4eb6-9de1-a1cddc841c94",
            "options": {
                "inputParameters": [
                    "()=>{",
                    "  return {",
                    "//    parm1: 'parm1_default_value',",
                    "//    parm2: 'parm2_default_value'",
                    "  };",
                    "}"
                ]
            },
            "clazz": "Flow.Begin"
        },
        {
            "class": "Flow.Catch",
            "loc": "-112.171875 -469.5",
            "id": "5f29c172-2b9e-46b3-bbe6-45b54f32014f",
            "options": {
                "getTransition": [
                    "(exception, payload) => {",
                    "\treturn '';",
                    "}"
                ]
            },
            "name": "~InteractionError",
            "clazz": "Flow.Catch"
        },
        {
            "class": "LookAt",
            "clazz": "LookAt",
            "asset-pack": "core",
            "loc": "-323.171875 -304",
            "id": "5b253dbf-64c9-48ef-9230-9dfa96d85f81",
            "options": {
                "getTarget": [
                    "() => {",
                    "   ",
                    "   let jibo = require('jibo');",
                    "   let entity = jibo.lps.getClosestAudibleEntity();",
                    "  //  let entity = jibo.lps.getClosestVisualEntity();",
                    "",
                    "   // valid if we have data and confidence is at least 0.6",
                    "   let valid = (entity !== undefined && entity.confidence >= 0.2);",
                    "",
                    "   if (valid) {",
                    "       //console.log(`valid entity: `, entity);",
                    "       let pos = entity.position;",
                    "       notepad.heardInitResponse = true;",
                    "       pos = new jibo.animate.THREE.Vector3(pos.x, pos.y, pos.z);",
                    "       pos.normalize();",
                    " ",
                    "       let newZ = pos.z;",
                    "       if (newZ > 0.6) {",
                    "           newZ = 0.6;",
                    "       }",
                    "       if (newZ < 0.3) {",
                    "           newZ = 0.3;",
                    "       }",
                    "",
                    "       notepad.lookAtPosition = {x: pos.x, y:pos.y, z: newZ};",
                    "",
                    "       console.log(`Heard you with ${entity.confidence} at ${notepad.lookAtPosition.x.toPrecision(3)}, ${notepad.lookAtPosition.y.toPrecision(3)}, ${notepad.lookAtPosition.z.toPrecision(3)}`);",
                    "   } else {",
                    "       let confid = undefined;",
                    "       if (entity) {",
                    "           confid = entity.confidence;",
                    "       }",
                    "",
                    "       //console.log(`Conf=${confid} Can't hear you :(`);",
                    "   }",
                    "  ",
                    "   return notepad.lookAtPosition;",
                    "}"
                ],
                "isContinuous": false,
                "config": [
                    "(lookAt) => {",
                    "}"
                ]
            },
            "name": "lps",
            "size": "105 56"
        },
        {
            "class": "Flow.Eval",
            "clazz": "Flow.Eval",
            "asset-pack": "core",
            "loc": "-303.6392161075524 -391",
            "id": "2f085b6a-43cc-4353-b412-436c7c5481f9",
            "options": {
                "Script": [
                    "() => {",
                    "    notepad.lookAtPosition = {x: 0, y: 0, z: 0.5};",
                    "    return '';",
                    "}"
                ]
            },
            "name": "init"
        },
        {
            "class": "Flow.Eval",
            "clazz": "Flow.Eval",
            "asset-pack": "core",
            "loc": "-165.10655721510483 -304",
            "id": "9f2ffcc1-be07-448e-b080-ebc21856f63f",
            "options": {
                "Script": [
                    "() => {",
                    "    return '';",
                    "}"
                ]
            },
            "name": "loop_lps"
        }
    ],
    "linkDataArray": [
        {
            "from": "943fb90c-8699-4eb6-9de1-a1cddc841c94",
            "to": "2f085b6a-43cc-4353-b412-436c7c5481f9",
            "fromPort": "",
            "toPort": ""
        },
        {
            "from": "2f085b6a-43cc-4353-b412-436c7c5481f9",
            "to": "5b253dbf-64c9-48ef-9230-9dfa96d85f81",
            "fromPort": "",
            "toPort": "",
            "text": ""
        },
        {
            "from": "5b253dbf-64c9-48ef-9230-9dfa96d85f81",
            "to": "9f2ffcc1-be07-448e-b080-ebc21856f63f",
            "fromPort": "",
            "toPort": "",
            "text": ""
        },
        {
            "from": "9f2ffcc1-be07-448e-b080-ebc21856f63f",
            "to": "5b253dbf-64c9-48ef-9230-9dfa96d85f81",
            "fromPort": "",
            "toPort": "",
            "text": ""
        }
    ]
}